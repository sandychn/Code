Suffix Array 后缀数组


sa[]: 后缀数组 suffix array
保存 0 ~ n-1 的全排列，含义是把所有后缀按字典序排序后，后缀在原串中的位置。suffix(sa[i]) < suffix(sa[i + 1])
sa[]记录位置，即“排第i的后缀是谁”。

rk[]: 名次数组 rank array
保存 0 ~ n-1 的全排列，rk[i] 的含义是 suffix(i) 在所有后缀中按字典序排序的名次。
rk[]记录排名，即“第以第i个字符起始的后缀子串在所有后缀子串中排第几”。

sa[] 与 rk[] 是一一对应关系且互为逆运算。即
可用rk[]推导sa[]： for (int i = 0; i < n; ++i) sa[rk[i]] = i;
可用sa[]推导rk[]： for (int i = 0; i < n; ++i) rk[sa[i]] = i;

height[]：高度数组
是一个辅助数组，和最长公共前缀 (Longest Common Prefix = LCP) 相关。
LCP(i, j)：suffix(sa[i]) 与 suffix(sa[j]) 的最长公共前缀长度，即排序后第i个后缀与第j个后缀的最长公共前缀长度
LCP Lemma(LCP引理)：若0<=i<k<j<=n-1，则LCP(i,j) = min{LCP(i, k), LCP(k, j)}。
其证明 https://www.cnblogs.com/ECJTUACM-873284962/p/6618870.html
由数学归纳法，可得如下定理
LCP Theorem(LCP定理)：若i < j 则LCP(i, j) = min{LCP(k - 1, k)}, i<k<=j
